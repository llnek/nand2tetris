/* Generated By:JJTree&JavaCC: Do not edit this line. ASTGentorConstants.java */
package czlab.tecs.ast;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ASTGentorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 7;
  /** RegularExpression Id. */
  int CONSTRUCTOR = 8;
  /** RegularExpression Id. */
  int FUNCTION = 9;
  /** RegularExpression Id. */
  int METHOD = 10;
  /** RegularExpression Id. */
  int FIELD = 11;
  /** RegularExpression Id. */
  int STATIK = 12;
  /** RegularExpression Id. */
  int VAR = 13;
  /** RegularExpression Id. */
  int INT = 14;
  /** RegularExpression Id. */
  int CHAR = 15;
  /** RegularExpression Id. */
  int BOOLEAN = 16;
  /** RegularExpression Id. */
  int VOID = 17;
  /** RegularExpression Id. */
  int TRUE = 18;
  /** RegularExpression Id. */
  int FALSE = 19;
  /** RegularExpression Id. */
  int NULL = 20;
  /** RegularExpression Id. */
  int THIS = 21;
  /** RegularExpression Id. */
  int LET = 22;
  /** RegularExpression Id. */
  int DO = 23;
  /** RegularExpression Id. */
  int IF = 24;
  /** RegularExpression Id. */
  int ELSE = 25;
  /** RegularExpression Id. */
  int WHILE = 26;
  /** RegularExpression Id. */
  int RETURN = 27;
  /** RegularExpression Id. */
  int LCURLY = 28;
  /** RegularExpression Id. */
  int RCURLY = 29;
  /** RegularExpression Id. */
  int LPAREN = 30;
  /** RegularExpression Id. */
  int RPAREN = 31;
  /** RegularExpression Id. */
  int LBRAC = 32;
  /** RegularExpression Id. */
  int RBRAC = 33;
  /** RegularExpression Id. */
  int DOT = 34;
  /** RegularExpression Id. */
  int COMMA = 35;
  /** RegularExpression Id. */
  int SEMICOLON = 36;
  /** RegularExpression Id. */
  int PLUS = 37;
  /** RegularExpression Id. */
  int MINUS = 38;
  /** RegularExpression Id. */
  int STAR = 39;
  /** RegularExpression Id. */
  int SLASH = 40;
  /** RegularExpression Id. */
  int AND = 41;
  /** RegularExpression Id. */
  int BAR = 42;
  /** RegularExpression Id. */
  int LT = 43;
  /** RegularExpression Id. */
  int GT = 44;
  /** RegularExpression Id. */
  int EQ = 45;
  /** RegularExpression Id. */
  int TILDA = 46;
  /** RegularExpression Id. */
  int QSTRING = 47;
  /** RegularExpression Id. */
  int NUMBER = 48;
  /** RegularExpression Id. */
  int IDENTIFIER = 49;
  /** RegularExpression Id. */
  int ALPHA = 50;
  /** RegularExpression Id. */
  int DIGIT = 51;
  /** RegularExpression Id. */
  int SCOPEDINVOKER = 52;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"class\"",
    "\"constructor\"",
    "\"function\"",
    "\"method\"",
    "\"field\"",
    "\"static\"",
    "\"var\"",
    "\"int\"",
    "\"char\"",
    "\"boolean\"",
    "\"void\"",
    "\"true\"",
    "\"false\"",
    "\"null\"",
    "\"this\"",
    "\"let\"",
    "\"do\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"return\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\",\"",
    "\";\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"<\"",
    "\">\"",
    "\"=\"",
    "\"~\"",
    "<QSTRING>",
    "<NUMBER>",
    "<IDENTIFIER>",
    "<ALPHA>",
    "<DIGIT>",
    "<SCOPEDINVOKER>",
  };

}
