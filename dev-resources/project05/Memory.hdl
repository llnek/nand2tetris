// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the computer's memory,
 * including RAM and memory mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: If load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000–0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications.
 */

CHIP Memory {

    IN  in[16], load, address[15];
    OUT out[16];

    PARTS:
    
	Xor(a=in[0],b=in[0],out=z0);
	Not(in=z0,out=t0);
	IsKB(in=address,out=iskb);
	//Not(in=iskb,out=nkb);

	Split15MSB(in=address, out=msb);
	Split15LSB(in=address, out=lsb);
	Split1513LSB(in=address, out=lsb13);
	Not(in=msb, out=r16);
	And(a=r16,b=load,out=f16);
	And(a=msb,b=load,out=f8);

	//And(a=nkb,b=f16,out=L16);
	//And(a=nkb,b=f8,out=L8);
	
	RAM16K(in=in, address=lsb, load=f16, out=o16);
	//RAM16K(in=in, address=lsb, load=f8,out=o8);
	Screen(in=in, address=lsb13, load=f8, out=o8);
	Keyboard(out=keyb);

	Mux16(a=o16, b=o8, sel=msb, out=pout);
	Mux16(a=pout , b=keyb , sel=iskb, out=out);
}
