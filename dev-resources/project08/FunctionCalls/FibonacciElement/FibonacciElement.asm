(Sys.init)

@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//remember current SP
@SP
D=M
@R15
M=D
@Main.fibonacci-0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
D=M
D=D-1
@ARG
// ARG -> old-SP - n-args
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci-0)
(WHILE)
@WHILE
0;JMP
(Main.fibonacci)

@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
D=M-D
@Main.fibonacci-1.t
D;JLT
@Main.fibonacci-1.f
0;JMP
(Main.fibonacci-1.t)
@SP
A=M-1
A=A-1
M=-1
@Main.fibonacci-1.z
0;JMP
(Main.fibonacci-1.f)
@SP
A=M-1
A=A-1
M=0
@Main.fibonacci-1.z
0;JMP
(Main.fibonacci-1.z)
@SP
M=M-1
@SP
A=M-1
D=M
@R13
M=D
@SP
M=M-1
@R13
D=M
@IF_TRUE
D;JNE
@IF_FALSE
0;JMP
(IF_TRUE)
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//start the return nightmare....
@LCL
D=M
@R13
M=D // [13] => LCL -> frame
@R13
D=M-1
D=D-1
D=D-1
D=D-1
A=D-1
D=M
@R14
M=D // [14] -> return addr
@ARG
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
A=M
M=D
@R15
D=M
D=D+1
@SP
M=D
@R13
A=M-1
D=M
@THAT
M=D // reset THAT
@R13
D=M-1
A=D-1
D=M
@THIS
M=D  // reset THIS
@R13
D=M-1
D=D-1
A=D-1
D=M
@ARG
M=D // reset ARG
@R13
D=M-1
D=D-1
D=D-1
A=D-1
D=M
@LCL
M=D // reset LCL
@R14
A=M
0;JMP // return code
(IF_FALSE)
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=M-D
@SP
M=M-1
//remember current SP
@SP
D=M
@R15
M=D
@Main.fibonacci-2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
D=M
D=D-1
@ARG
// ARG -> old-SP - n-args
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci-2)
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=M-D
@SP
M=M-1
//remember current SP
@SP
D=M
@R15
M=D
@Main.fibonacci-3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@R15
D=M
D=D-1
@ARG
// ARG -> old-SP - n-args
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci-3)
@SP
A=M-1
D=M
@SP
A=M-1
A=A-1
M=D+M
@SP
M=M-1
//start the return nightmare....
@LCL
D=M
@R13
M=D // [13] => LCL -> frame
@R13
D=M-1
D=D-1
D=D-1
D=D-1
A=D-1
D=M
@R14
M=D // [14] -> return addr
@ARG
D=M
@R15
M=D
@SP
A=M-1
D=M
@R15
A=M
M=D
@R15
D=M
D=D+1
@SP
M=D
@R13
A=M-1
D=M
@THAT
M=D // reset THAT
@R13
D=M-1
A=D-1
D=M
@THIS
M=D  // reset THIS
@R13
D=M-1
D=D-1
A=D-1
D=M
@ARG
M=D // reset ARG
@R13
D=M-1
D=D-1
D=D-1
A=D-1
D=M
@LCL
M=D // reset LCL
@R14
A=M
0;JMP // return code
