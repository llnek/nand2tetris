function Worm.ctor 0
push constant 8
call Memory.alloc 1
pop pointer 0
push argument 2
pop this 7
push constant 36
pop this 4
push argument 1
pop this 5
call Game.north 0
pop static 0
call Game.south 0
pop static 1
call Game.east 0
pop static 2
call Game.west 0
pop static 3
push constant 0
pop static 4
push constant 1
pop static 5
push constant 2
pop static 6
push constant 3
pop static 7
push constant 0
push constant 0
push constant 0
push constant 0
call Game.mkBox 4
pop this 0
push constant 0
push constant 0
push constant 0
push constant 0
call Game.mkBox 4
pop this 2
push this 4
call Array.new 1
pop this 1
push constant 0
pop this 6
label WHILE_EXP0
push this 6
push this 4
lt
not
if-goto WHILE_END0
push this 6
push this 1
add
push constant 0
push constant 0
push constant 0
push constant 0
call Game.mkBox 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 6
push constant 1
add
pop this 6
goto WHILE_EXP0
label WHILE_END0
push pointer 0
push static 7
push argument 0
add
pop pointer 1
push that 0
push static 5
push argument 0
add
pop pointer 1
push that 0
sub
push constant 2
call Math.divide 2
push static 6
push argument 0
add
pop pointer 1
push that 0
push static 4
push argument 0
add
pop pointer 1
push that 0
sub
push constant 2
call Math.divide 2
call Worm.init 3
pop temp 0
push pointer 0
return
function Worm.init 6
push argument 0
pop pointer 0
push argument 1
push argument 2
push argument 1
push this 5
add
push constant 1
sub
push argument 2
push this 5
add
push constant 1
sub
call Game.mkBox 4
pop local 5
push constant 0
push this 1
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
pop this 6
push constant 1
pop local 4
label WHILE_EXP0
push local 4
push this 6
lt
not
if-goto WHILE_END0
push this 7
push static 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 5
push local 5
add
pop pointer 1
push that 0
pop local 0
push static 6
push local 5
add
pop pointer 1
push that 0
push constant 1
add
pop local 1
push local 0
push this 5
add
push constant 1
sub
pop local 2
push local 1
push this 5
add
push constant 1
sub
pop local 3
label IF_FALSE0
push this 7
push static 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 5
push local 5
add
pop pointer 1
push that 0
pop local 0
push static 4
push local 5
add
pop pointer 1
push that 0
push constant 1
sub
pop local 3
push local 0
push this 5
add
push constant 1
sub
pop local 2
push local 3
push this 5
sub
push constant 1
add
pop local 1
label IF_FALSE1
push this 7
push static 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push static 7
push local 5
add
pop pointer 1
push that 0
push constant 1
add
pop local 0
push static 4
push local 5
add
pop pointer 1
push that 0
pop local 1
push local 0
push this 5
add
push constant 1
sub
pop local 2
push local 1
push this 5
add
push constant 1
sub
pop local 3
label IF_FALSE2
push this 7
push static 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push static 5
push local 5
add
pop pointer 1
push that 0
push constant 1
sub
pop local 2
push static 4
push local 5
add
pop pointer 1
push that 0
pop local 1
push local 2
push this 5
sub
push constant 1
add
pop local 0
push local 1
push this 5
add
push constant 1
sub
pop local 3
label IF_FALSE3
push local 0
push local 1
push local 2
push local 3
call Game.mkBox 4
pop local 5
push local 4
push this 1
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 3
push constant 0
return
function Worm.length 0
push argument 0
pop pointer 0
push this 6
return
function Worm.finz 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 4
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
call Memory.deAlloc 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Memory.deAlloc 1
pop temp 0
push this 1
call Memory.deAlloc 1
pop temp 0
push this 2
call Memory.deAlloc 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Worm.renderHead 1
push argument 0
pop pointer 0
push constant 0
push this 1
add
pop pointer 1
push that 0
pop local 0
push static 5
push local 0
add
pop pointer 1
push that 0
push static 4
push local 0
add
pop pointer 1
push that 0
push static 7
push local 0
add
pop pointer 1
push that 0
push static 6
push local 0
add
pop pointer 1
push that 0
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Worm.render 2
push argument 0
pop pointer 0
push this 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
call Screen.setColor 1
pop temp 0
push this 2
pop local 0
push static 5
push local 0
add
pop pointer 1
push that 0
push static 4
push local 0
add
pop pointer 1
push that 0
push static 7
push local 0
add
pop pointer 1
push that 0
push static 6
push local 0
add
pop pointer 1
push that 0
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Worm.renderHead 1
pop temp 0
push constant 1
pop local 1
label WHILE_EXP0
push local 1
push this 6
lt
not
if-goto WHILE_END0
push local 1
push this 1
add
pop pointer 1
push that 0
pop local 0
push static 5
push local 0
add
pop pointer 1
push that 0
push static 4
push local 0
add
pop pointer 1
push that 0
push static 7
push local 0
add
pop pointer 1
push that 0
push static 6
push local 0
add
pop pointer 1
push that 0
call Screen.drawRectangle 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Worm.hide 0
push argument 0
pop pointer 0
push constant 0
return
function Worm.grow 0
push argument 0
pop pointer 0
push constant 0
return
function Worm.move 1
push argument 0
pop pointer 0
push constant 0
pop this 3
push this 7
push static 1
eq
push this 7
push static 0
eq
or
push argument 1
push static 3
eq
push argument 1
push static 2
eq
or
and
push this 7
push static 3
eq
push this 7
push static 2
eq
or
push argument 1
push static 0
eq
push argument 1
push static 1
eq
or
and
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 1
call Worm.switchDir 2
pop temp 0
push argument 1
pop this 7
goto IF_END0
label IF_FALSE0
push pointer 0
push this 7
call Worm.switchDir 2
pop temp 0
label IF_END0
push pointer 0
call Worm.shift 1
pop temp 0
push constant 0
push this 1
add
pop pointer 1
push that 0
pop local 0
push static 6
push local 0
add
push static 6
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 4
push local 0
add
push static 4
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push local 0
add
push static 5
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 7
push local 0
add
push static 7
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Worm.switchDir 1
push argument 0
pop pointer 0
push constant 0
push this 1
add
pop pointer 1
push that 0
pop local 0
push argument 1
push static 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 4
push this 0
add
push static 4
push local 0
add
pop pointer 1
push that 0
push this 5
sub
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 6
push this 0
add
push static 4
push local 0
add
pop pointer 1
push that 0
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push this 0
add
push static 5
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 7
push this 0
add
push static 7
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push argument 1
push static 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 4
push this 0
add
push static 6
push local 0
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 6
push this 0
add
push static 6
push local 0
add
pop pointer 1
push that 0
push this 5
add
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push this 0
add
push static 5
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 7
push this 0
add
push static 7
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push argument 1
push static 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push static 4
push this 0
add
push static 4
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 6
push this 0
add
push static 6
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push this 0
add
push static 7
push local 0
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 7
push this 0
add
push static 7
push local 0
add
pop pointer 1
push that 0
push this 5
add
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push argument 1
push static 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push static 4
push this 0
add
push static 4
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 6
push this 0
add
push static 6
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push this 0
add
push static 5
push local 0
add
pop pointer 1
push that 0
push this 5
sub
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 7
push this 0
add
push static 5
push local 0
add
pop pointer 1
push that 0
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
push constant 0
return
function Worm.shift 3
push argument 0
pop pointer 0
push this 6
push constant 1
sub
pop local 2
push local 2
push this 1
add
pop pointer 1
push that 0
pop local 0
push static 4
push this 2
add
push static 4
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push this 2
add
push static 5
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 6
push this 2
add
push static 6
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 7
push this 2
add
push static 7
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label WHILE_EXP0
push local 2
push constant 0
gt
not
if-goto WHILE_END0
push local 2
push constant 1
sub
push this 1
add
pop pointer 1
push that 0
pop local 0
push local 2
push this 1
add
pop pointer 1
push that 0
pop local 1
push static 4
push local 1
add
push static 4
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 5
push local 1
add
push static 5
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 6
push local 1
add
push static 6
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 7
push local 1
add
push static 7
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
sub
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
pop this 3
push constant 0
return
function Worm.oobound 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 6
lt
not
if-goto WHILE_END0
push argument 1
push local 0
push this 1
add
pop pointer 1
push that 0
call Game.inbox 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
pop local 0
goto IF_END0
label IF_FALSE0
push constant 0
not
return
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
