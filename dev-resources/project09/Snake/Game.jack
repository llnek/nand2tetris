/**
 */
class Game {
  // 0=none,1=up,2=right,3=down,4=left
  static int RIGHT,LEFT,DOWN,UP;
  field Snake snake;
  field Candy candy;
  field int dir;

  /**
   */
  constructor Game ctor() {
    let snake = Snake.ctor();
    let RIGHT=132;
    let DOWN=133;
    let LEFT=130;
    let UP= 131;
    let dir = RIGHT;
    return this;
  }

  /**
   */
  method boolean eat() {

    if ((((snake.getY1() < food.getY()) |
          (snake.getY1() = food.getY())) &
        ((food.getY() < snake.getY2()) |
         (snake.getY2() = food.getY())) &
         ((snake.getX1() < food.getX()) |
         (snake.getX1() = food.getX())) &
         ((food.getX() < snake.getX2()) |
         (snake.getX2() = food.getX())))) {
      do snake.grow();
      do candy.eaten();
      do snake.drawHead();
      do candy.spawn();
      return true;
    }
    return false;
  }

  /**
   */
  method void updateScore(int s) {
    if (s < 10) {
      do Output.backSpace();
      do Output.printInt(s);
    } else {
      if (s < 100) {
        do Output.backSpace();
        do Output.backSpace();
        do Output.printInt(s);
      } else {
        do Output.backSpace();
        do Output.backSpace();
        do Output.backSpace();
        do Output.printInt(s);
      }
    }
    return;
  }

  /**
   */
  method void start(){
    var char key;
    var int score;
    var boolean exit;
    let food = Candy.ctor(256, 128, snake.getThick(), snake.lenght());
    let exit = false;
    let score = 0;

    do Output.printString("Score:  ");
    do Output.printInt(score);
    while (~exit) {
      while ((key = 0) & (~exit)) {
        let key = Keyboard.keyPressed();
        do moveSnake();
        if (eat()){
          let score = score + 1 ;
          do printScore(score);
        }
        else {
          do food.drawFood();
        }
        if (snake.isDead()){
          let exit = true;
        }
      }
      // 0=none,1=up,2=right,3=down,4=left
      if (key = UP) {
        if (~(dir = DOWN)) {
          let dir = UP;
        }
      }
      if (key = DOWN) {
        if (~(dir=UP)) {
          let dir = DOWN;
        }
      }
      if (key = LEFT) {
        if (~(dir=RIGHT)) {
          let dir = LEFT;
        }
      }
      if (key = RIGHT) {
        if (~(dir=LEFT)) {
          let dir = RIGHT;
        }
      }
      while ((~(key = 0)) & (~exit)) {
        let key = Keyboard.keyPressed();
        do moveSnake();
        if (eat()) {
          let score = score + 1 ;
          do printScore(score);
        } else {
          do food.drawFood();
        }
        if (snake.isDead()) {
          let exit = true;
        }
      }
      do Sys.wait(2);
    }
    //do snake.erase();
    do Output.println();
    do Output.println();
    do Output.println();
    do Output.println();
    do Output.println();
    do Output.println();
    do Output.println();
    do Output.println();
    do Output.println();
    do Output.println();
    do Output.println();
    do Output.printString("                         HAI PERSO!!!!");
    do Screen.setColor(true);
    do Screen.drawRectangle(0,12,5,255);
    return;
  }

  /**
   */
  method void finz() {
    do snake.finz();
    do Memory.deAlloc(this);
    return;
  }

  /**
   */
  method void moveSnake(){
    if (dir = RIGHT) {
      do snake.moveRight();
    }
    if (dir = LEFT) {
      do snake.moveLeft();
    }
    if (dir = UP) {
      do snake.moveUp();
    }
    if (dir = DOWN) {
      do snake.moveDown();
    }
    return;
  }

}

