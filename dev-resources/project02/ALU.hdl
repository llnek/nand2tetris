// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/02/ALU.hdl

/**
 * The ALU.  Computes a pre-defined set of functions out = f(x,y)
 * where x and y are two 16-bit inputs. The function f is selected 
 * by a set of 6 control bits denoted zx, nx, zy, ny, f, no.
 * The ALU operation can be described using the following pseudocode:
 *     if zx=1 set x = 0       // 16-bit zero constant
 *     if nx=1 set x = !x      // Bit-wise negation
 *     if zy=1 set y = 0       // 16-bit zero constant
 *     if ny=1 set y = !y      // Bit-wise negation
 *     if f=1  set out = x + y // Integer 2's complement addition
 *     else    set out = x & y // Bit-wise And
 *     if no=1 set out = !out  // Bit-wise negation
 *
 * In addition to computing out, the ALU computes two 1-bit outputs:
 *     if out=0 set zr = 1 else zr = 0 // 16-bit equality comparison
 *     if out<0 set ng = 1 else ng = 0 // 2's complement comparison
 */

CHIP ALU {

    IN  // 16-bit inputs:
        x[16], y[16],
        // Control bits:
        zx, // Zero the x input
        nx, // Negate the x input
        zy, // Zero the y input
        ny, // Negate the y input
        f,  // Function code: 1 for add, 0 for and
        no; // Negate the out output

    OUT // 16-bit output
        out[16],

        // ALU output flags
        zr, // 1 if out=0, 0 otherwise
        ng; // 1 if out<0, 0 otherwise

    PARTS:

	Xor(a=x[0] , b=x[0] , out=ff);
	Not(in=ff, out=ft);

	Zero16(in=x,out=zx0);
	Zero16(in=y,out=zy0);
	Mux16(a=x,b=zx0,sel=zx,out=tx0);
	Mux16(a=y,b=zy0,sel=zy,out=ty0);
	Not16(in=tx0,out=nx00);
	Not16(in=ty0,out=ny00);
	Mux16(a=tx0,b=nx00,sel=nx,out=vx0);
	Mux16(a=ty0,b=ny00,sel=ny,out=vy0);

	Add16(a=vx0,b=vy0,out=xaddy);
	And16(a=vx0,b=vy0,out=xandy);

	Mux16(a=xandy, b=xaddy, sel=f, out=preout);
	Not16(in=preout,out=negout);
	Mux16(a=preout , b=negout , sel=no, out=theout);
	Mux16(a=preout , b=negout , sel=no, out=out);

	IsZero16(in=theout, out=outz);
	IsNeg16(in=theout, out=outneg);

	Mux(a=ft , b=ff, sel=outz , out=zr );
	Mux(a=ff , b=ft, sel=outneg , out=ng );

}
